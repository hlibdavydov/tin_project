[{"D:\\Projects\\project_for_tin\\src\\Classes\\EmployeeTable.js":"1","D:\\Projects\\project_for_tin\\src\\Controllers\\DatabaseController\\Repositories\\EmployeeRepository.js":"2","D:\\Projects\\project_for_tin\\src\\App.js":"3","D:\\Projects\\project_for_tin\\src\\API\\EmployeeAPI.js":"4","D:\\Projects\\project_for_tin\\src\\Classes\\MainMenu.js":"5","D:\\Projects\\project_for_tin\\src\\Classes\\MainPage.js":"6","D:\\Projects\\project_for_tin\\src\\Classes\\DataValidation\\Field.js":"7","D:\\Projects\\project_for_tin\\src\\Controllers\\DatabaseController\\Database.js":"8","D:\\Projects\\project_for_tin\\src\\Classes\\EmployeeForm.js":"9","D:\\Projects\\project_for_tin\\src\\Classes\\Header.js":"10"},{"size":2686,"mtime":1606929878241,"results":"11","hashOfConfig":"12"},{"size":3103,"mtime":1606856240092,"results":"13","hashOfConfig":"12"},{"size":495,"mtime":1606858957270,"results":"14","hashOfConfig":"12"},{"size":1921,"mtime":1606847187347,"results":"15","hashOfConfig":"12"},{"size":1439,"mtime":1606858842124,"results":"16","hashOfConfig":"12"},{"size":3700,"mtime":1606350588685,"results":"17","hashOfConfig":"12"},{"size":4014,"mtime":1606413660686,"results":"18","hashOfConfig":"12"},{"size":197,"mtime":1606838304929,"results":"19","hashOfConfig":"12"},{"size":3858,"mtime":1606928905913,"results":"20","hashOfConfig":"12"},{"size":1248,"mtime":1606259630049,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1hset54",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\project_for_tin\\src\\Classes\\EmployeeTable.js",["44","45","46"],"D:\\Projects\\project_for_tin\\src\\Controllers\\DatabaseController\\Repositories\\EmployeeRepository.js",[],["47","48"],"D:\\Projects\\project_for_tin\\src\\App.js",[],"D:\\Projects\\project_for_tin\\src\\API\\EmployeeAPI.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\MainMenu.js",["49"],"D:\\Projects\\project_for_tin\\src\\Classes\\MainPage.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\DataValidation\\Field.js",["50","51","52","53","54","55","56","57","58","59","60"],"class Field {\r\n    fieldInput;\r\n    errorText;\r\n\r\n    constructor(fieldInput) {\r\n        this.fieldInput = fieldInput;\r\n    }\r\n    \r\n\r\n    checkRequirements() {\r\n        if (!this.checkRequired(this.fieldInput)) {\r\n            throw \"Field is required\"\r\n        }\r\n    }\r\n\r\n    checkRequired(value) {\r\n        if (!value) {\r\n            return false;\r\n        }\r\n        value = value.toString().trim();\r\n        if (value === \"\" || value == null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkTextLengthRange(value, min, max) {\r\n        if (!value) {\r\n            return false;\r\n        }\r\n        value = value.toString().trim();\r\n        const length = value.length;\r\n        if (max && length > max) {\r\n            return false;\r\n        }\r\n        if (min && length < min) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nclass SalaryField extends Field {\r\n    lowerBound;\r\n    upperBound\r\n\r\n    constructor(fieldInput, errorText, lowerBound, upperBound) {\r\n        super(fieldInput, errorText);\r\n        this.lowerBound = lowerBound;\r\n        this.upperBound = upperBound;\r\n    }\r\n\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n\r\n        if (Number.isNaN(parseFloat(this.fieldInput))) {\r\n            throw 'Value must be a number';\r\n        } else if (!this.checkForBounds()) {\r\n            throw `Number must be in bounds of(${this.lowerBound}-${this.upperBound})`;\r\n        }\r\n    }\r\n\r\n    checkForBounds() {\r\n        let salary = parseFloat(this.fieldInput);\r\n        return salary >= this.lowerBound && salary <= this.upperBound;\r\n    }\r\n}\r\n\r\nexport class TextField extends Field {\r\n    minLength;\r\n    maxLength;\r\n\r\n    constructor(fieldInput, minLength = 2, maxLength = 60) {\r\n        super(fieldInput);\r\n        this.minLength = minLength;\r\n        this.maxLength = maxLength;\r\n    }\r\n\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n\r\n        if (!this.checkTextLengthRange(this.fieldInput, this.minLength, this.maxLength)) {\r\n            throw `Field must contain from ${this.minLength} to ${this.maxLength} characters`;\r\n        }\r\n    }\r\n}\r\n\r\nexport class EmailField extends TextField {\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n        if (!this.checkEmail()) {\r\n            throw 'Filed must contain correct email address';\r\n        }\r\n    }\r\n\r\n    checkEmail() {\r\n        let email = this.fieldInput.toString().trim();\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email));\r\n    }\r\n}\r\n\r\nclass DateField extends Field {\r\n    static pattern = /(\\d{4})-(\\d{2})-(\\d{2})/;\r\n    dateIsFromPast;\r\n\r\n    constructor(fieldInput, errorText, dateIsFromPast = false) {\r\n        super(fieldInput, errorText);\r\n        this.dateIsFromPast = dateIsFromPast;\r\n    }\r\n\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n        if (!this.checkDateMatchPattern()) {\r\n            throw 'Wrong date format';\r\n        } else if (this.dateIsFromPast && this.isAfter(this.getCurrentDate())) {\r\n            throw 'Date cannot be from future';\r\n        }\r\n    }\r\n\r\n    checkDateMatchPattern() {\r\n        return DateField.pattern.test(this.fieldInput);\r\n    }\r\n\r\n    getCurrentDate() {\r\n        let nowDate = new Date(),\r\n            month = '' + (nowDate.getMonth() + 1),\r\n            day = '' + nowDate.getDate(),\r\n            year = nowDate.getFullYear();\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    isAfter(otherDate) {\r\n        if (!this.checkDateMatchPattern()) {\r\n            return false;\r\n        }\r\n        const valueDate = new Date(this.fieldInput);\r\n        const compareToDate = new Date(otherDate);\r\n        return valueDate.getTime() >= compareToDate.getTime();\r\n    }\r\n}\r\n","D:\\Projects\\project_for_tin\\src\\Controllers\\DatabaseController\\Database.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\EmployeeForm.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Header.js",[],{"ruleId":"61","severity":1,"message":"62","line":18,"column":5,"nodeType":"63","messageId":"64","endLine":20,"endColumn":6},{"ruleId":"65","severity":1,"message":"66","line":50,"column":13,"nodeType":"67","endLine":50,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":52,"column":13,"nodeType":"67","endLine":52,"endColumn":23},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":31,"nodeType":"74","messageId":"75","endLine":3,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":12,"column":13,"nodeType":"78","messageId":"79","endLine":12,"endColumn":38},{"ruleId":"72","severity":1,"message":"80","line":44,"column":7,"nodeType":"74","messageId":"75","endLine":44,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":58,"column":13,"nodeType":"78","messageId":"79","endLine":58,"endColumn":44},{"ruleId":"76","severity":1,"message":"77","line":60,"column":13,"nodeType":"78","messageId":"79","endLine":60,"endColumn":88},{"ruleId":"76","severity":1,"message":"77","line":84,"column":13,"nodeType":"78","messageId":"79","endLine":84,"endColumn":95},{"ruleId":"76","severity":1,"message":"77","line":93,"column":13,"nodeType":"78","messageId":"79","endLine":93,"endColumn":62},{"ruleId":"81","severity":1,"message":"82","line":99,"column":30,"nodeType":"83","messageId":"84","endLine":99,"endColumn":31,"suggestions":"85"},{"ruleId":"81","severity":1,"message":"82","line":99,"column":55,"nodeType":"83","messageId":"84","endLine":99,"endColumn":56,"suggestions":"86"},{"ruleId":"72","severity":1,"message":"87","line":104,"column":7,"nodeType":"74","messageId":"75","endLine":104,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":116,"column":13,"nodeType":"78","messageId":"79","endLine":116,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":118,"column":13,"nodeType":"78","messageId":"79","endLine":118,"endColumn":48},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'SalaryField' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["90","91"],["92","93"],"'DateField' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"94","fix":"95","desc":"96"},{"messageId":"97","fix":"98","desc":"99"},{"messageId":"94","fix":"100","desc":"96"},{"messageId":"97","fix":"101","desc":"99"},"removeEscape",{"range":"102","text":"103"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"104","text":"105"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"106","text":"103"},{"range":"107","text":"105"},[2488,2489],"",[2488,2488],"\\",[2513,2514],[2513,2513]]