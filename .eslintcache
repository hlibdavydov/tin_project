[{"D:\\Projects\\project_for_tin\\src\\App.js":"1","D:\\Projects\\project_for_tin\\src\\Classes\\MainMenu.js":"2","D:\\Projects\\project_for_tin\\src\\Classes\\MainPage.js":"3","D:\\Projects\\project_for_tin\\src\\Classes\\DataValidation\\Field.js":"4","D:\\Projects\\project_for_tin\\src\\Classes\\Header.js":"5","D:\\Projects\\project_for_tin\\src\\Translations\\translate.js":"6","D:\\Projects\\project_for_tin\\src\\Translations\\en\\translation.js":"7","D:\\Projects\\project_for_tin\\src\\Classes\\Settings.js":"8","D:\\Projects\\project_for_tin\\src\\Translations\\pl\\translation.js":"9","D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\Prescription.js":"10","D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\PrescriptionsTable.js":"11","D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\PrescriptionsForm.js":"12","D:\\Projects\\project_for_tin\\src\\index.js":"13","D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\DrugsTable.js":"14","D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\Drugs.js":"15","D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\DrugsDetails.js":"16","D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\PrescriptionAddingForm.js":"17","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\Employees.js":"18","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\EmployeeForm.js":"19","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\EmployeeTable.js":"20","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\DoctorDetails.js":"21","D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\DrugAddingForm.js":"22","D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\Clients.js":"23","D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\ClientAddingForm.js":"24","D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\ClientsTable.js":"25","D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\ClientDetails.js":"26"},{"size":379,"mtime":1607295548117,"results":"27","hashOfConfig":"28"},{"size":2548,"mtime":1608218956062,"results":"29","hashOfConfig":"28"},{"size":3749,"mtime":1607295760151,"results":"30","hashOfConfig":"28"},{"size":4021,"mtime":1608219893802,"results":"31","hashOfConfig":"28"},{"size":1478,"mtime":1607296310428,"results":"32","hashOfConfig":"28"},{"size":576,"mtime":1607206343891,"results":"33","hashOfConfig":"28"},{"size":1310,"mtime":1608223600528,"results":"34","hashOfConfig":"28"},{"size":760,"mtime":1607214544668,"results":"35","hashOfConfig":"28"},{"size":1009,"mtime":1608223664998,"results":"36","hashOfConfig":"28"},{"size":1778,"mtime":1607890819481,"results":"37","hashOfConfig":"28"},{"size":2263,"mtime":1608212999129,"results":"38","hashOfConfig":"28"},{"size":5440,"mtime":1607289209905,"results":"39","hashOfConfig":"28"},{"size":169,"mtime":1607081138348,"results":"40","hashOfConfig":"28"},{"size":1771,"mtime":1608204700678,"results":"41","hashOfConfig":"28"},{"size":402,"mtime":1608214018547,"results":"42","hashOfConfig":"28"},{"size":2880,"mtime":1608204592201,"results":"43","hashOfConfig":"28"},{"size":5756,"mtime":1608213524099,"results":"44","hashOfConfig":"28"},{"size":427,"mtime":1608205526973,"results":"45","hashOfConfig":"28"},{"size":3862,"mtime":1608205517791,"results":"46","hashOfConfig":"28"},{"size":3033,"mtime":1608210454214,"results":"47","hashOfConfig":"28"},{"size":2819,"mtime":1608210407730,"results":"48","hashOfConfig":"28"},{"size":3698,"mtime":1608216568331,"results":"49","hashOfConfig":"28"},{"size":420,"mtime":1608217183946,"results":"50","hashOfConfig":"28"},{"size":3841,"mtime":1608223823509,"results":"51","hashOfConfig":"28"},{"size":2006,"mtime":1608225684219,"results":"52","hashOfConfig":"28"},{"size":2985,"mtime":1608226398737,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"8oegoj",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\project_for_tin\\src\\App.js",["120"],"import React from 'react';\r\nimport \"./CSS/App.css\"\r\nimport MainMenu from \"./Classes/MainMenu\";\r\nimport Header from \"./Classes/Header\";\r\nimport Settings from \"./Classes/Settings\";\r\nexport class App extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Settings/>\r\n                <MainMenu/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n",["121","122"],"D:\\Projects\\project_for_tin\\src\\Classes\\MainMenu.js",["123"],"D:\\Projects\\project_for_tin\\src\\Classes\\MainPage.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\DataValidation\\Field.js",["124","125","126","127","128","129","130","131","132","133","134"],"class Field {\r\n    fieldInput;\r\n    errorText;\r\n\r\n    constructor(fieldInput) {\r\n        this.fieldInput = fieldInput;\r\n    }\r\n    \r\n\r\n    checkRequirements() {\r\n        if (!this.checkRequired(this.fieldInput)) {\r\n            throw \"Field is required\"\r\n        }\r\n    }\r\n\r\n    checkRequired(value) {\r\n        if (!value) {\r\n            return false;\r\n        }\r\n        value = value.toString().trim();\r\n        if (value === \"\" || value == null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkTextLengthRange(value, min, max) {\r\n        if (!value) {\r\n            return false;\r\n        }\r\n        value = value.toString().trim();\r\n        const length = value.length;\r\n        if (max && length > max) {\r\n            return false;\r\n        }\r\n        if (min && length < min) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nclass SalaryField extends Field {\r\n    lowerBound;\r\n    upperBound\r\n\r\n    constructor(fieldInput, errorText, lowerBound, upperBound) {\r\n        super(fieldInput, errorText);\r\n        this.lowerBound = lowerBound;\r\n        this.upperBound = upperBound;\r\n    }\r\n\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n\r\n        if (Number.isNaN(parseFloat(this.fieldInput))) {\r\n            throw 'Value must be a number';\r\n        } else if (!this.checkForBounds()) {\r\n            throw `Number must be in bounds of(${this.lowerBound}-${this.upperBound})`;\r\n        }\r\n    }\r\n\r\n    checkForBounds() {\r\n        let salary = parseFloat(this.fieldInput);\r\n        return salary >= this.lowerBound && salary <= this.upperBound;\r\n    }\r\n}\r\n\r\nexport class TextField extends Field {\r\n    minLength;\r\n    maxLength;\r\n\r\n    constructor(fieldInput, minLength = 2, maxLength = 60) {\r\n        super(fieldInput);\r\n        this.minLength = minLength;\r\n        this.maxLength = maxLength;\r\n    }\r\n\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n\r\n        if (!this.checkTextLengthRange(this.fieldInput, this.minLength, this.maxLength)) {\r\n            throw `Field must contain from ${this.minLength} to ${this.maxLength} characters`;\r\n        }\r\n    }\r\n}\r\n\r\nexport class EmailField extends TextField {\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n        if (!this.checkEmail()) {\r\n            throw 'Filed must contain correct email address';\r\n        }\r\n    }\r\n\r\n    checkEmail() {\r\n        let email = this.fieldInput.toString().trim();\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email));\r\n    }\r\n}\r\n\r\nclass DateField extends Field {\r\n    static pattern = /(\\d{4})-(\\d{2})-(\\d{2})/;\r\n    dateIsFromPast;\r\n\r\n    constructor(fieldInput, errorText, dateIsFromPast = false) {\r\n        super(fieldInput, errorText);\r\n        this.dateIsFromPast = dateIsFromPast;\r\n    }\r\n\r\n    checkRequirements() {\r\n        super.checkRequirements();\r\n        if (!this.checkDateMatchPattern()) {\r\n            throw 'Wrong date format';\r\n        } else if (this.dateIsFromPast && this.isAfter(this.getCurrentDate())) {\r\n            throw 'Date cannot be from future';\r\n        }\r\n    }\r\n\r\n    checkDateMatchPattern() {\r\n        return DateField.pattern.test(this.fieldInput);\r\n    }\r\n\r\n    getCurrentDate() {\r\n        let nowDate = new Date(),\r\n            month = '' + (nowDate.getMonth() + 1),\r\n            day = '' + nowDate.getDate(),\r\n            year = nowDate.getFullYear();\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    isAfter(otherDate) {\r\n        if (!this.checkDateMatchPattern()) {\r\n            return false;\r\n        }\r\n        const valueDate = new Date(this.fieldInput);\r\n        const compareToDate = new Date(otherDate);\r\n        return valueDate.getTime() >= compareToDate.getTime();\r\n    }\r\n}\r\n","D:\\Projects\\project_for_tin\\src\\Classes\\Header.js",["135","136"],"import React from 'react';\r\nimport '../CSS/Header.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {withTranslation} from \"react-i18next\";\r\nimport \"../Translations/translate\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        isActive: false,\r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        if (this.state.isActive) {\r\n            return (\r\n                <div>\r\n                    <header>\r\n                        <h1>\r\n                            {t(\"nameOfCompany\")}\r\n                            <h2>\r\n                                {t(\"descriptionOfName\")}\r\n                            </h2>\r\n                        </h1>\r\n                        <img id=\"logo\" src=\"http://www.freepnglogos.com/uploads/medicine-logo-png-1.png\"\r\n                             alt=\"LOGO\"/>\r\n                    </header>\r\n                    <Button variant={\"primary\"} size={\"lg\"} block={true} onClick={this.hideHeader}>{t('hide')}</Button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Button variant={\"primary\"} size={\"lg\"} block={true} onClick={this.showHeader}>{t('showHeader')}</Button>\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    hideHeader = () => {\r\n        this.setState({isActive: false})\r\n    }\r\n    showHeader = () => {\r\n        this.setState({isActive: true})\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n\r\n","D:\\Projects\\project_for_tin\\src\\Translations\\translate.js",[],"D:\\Projects\\project_for_tin\\src\\Translations\\en\\translation.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Settings.js",["137","138","139","140"],"import React, {Component, useState} from 'react';\r\nimport {Dropdown, Button} from \"react-bootstrap\";\r\nimport '../CSS/Settings.css';\r\nimport i18n from '../Translations/translate';\r\nimport Header from \"./Header\";\r\n\r\n\r\nexport default function Settings() {\r\n\r\n    const [language, setLanguage] = useState('en');\r\n\r\n    const handleOnclick = (e) => {\r\n        e.preventDefault();\r\n        setLanguage(e.target.value);\r\n        i18n.changeLanguage(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <select onChange={handleOnclick} id='languageSelection'>\r\n                <option value='en'>English</option>\r\n                <option value='pl'>Polski</option>\r\n            </select>\r\n            <Header/>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Projects\\project_for_tin\\src\\Translations\\pl\\translation.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\Prescription.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\PrescriptionsTable.js",["141"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport axios from \"axios\";\r\nimport {PrescriptionFilterContext} from \"./Prescription\";\r\n\r\nexport const Recipes = () => {\r\n    const {t} = useTranslation();\r\n    const [rows, setRows] = useState([]);\r\n    const [filterOptions, setFilterOptions] = useContext(PrescriptionFilterContext);\r\n    const loadDataToTable = () =>{\r\n        axios.get('https://localhost:5001/api/prescriptions').then(response => {\r\n            setRows(response.data);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        loadDataToTable();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {/*<img className='reloadButton' src='https://cdn.icon-icons.com/icons2/614/PNG/512/cloud-reload-symbol_icon-icons.com_56547.png'/>*/}\r\n            <button onClick={() => {\r\n                loadDataToTable();\r\n            }}>{t('reload')}\r\n            </button>\r\n            <table>\r\n                <tr>\r\n                    <th>{t(\"givenBy\")}</th>\r\n                    <th>{t(\"client\")}</th>\r\n                    <th>{t(\"drug\")}</th>\r\n                    <th>{t(\"date\")}</th>\r\n                </tr>\r\n                {rows\r\n                    .filter(value => {\r\n                        if (filterOptions.selectDoctor === 'all') return true;\r\n                        return value.givenByDoctor === filterOptions.selectDoctor;\r\n                    })\r\n                    .filter(value => {\r\n                        if (filterOptions.selectClient === 'all') return true;\r\n                        return value.toClient === filterOptions.selectClient;\r\n                    })\r\n                    .filter(value => {\r\n                        if (filterOptions.selectDrug === 'all') return true;\r\n                        return value.drug === filterOptions.selectDrug;\r\n                    })\r\n                    .map((r) => (\r\n                        <tr>\r\n                            <td>{r.givenByDoctor}</td>\r\n                            <td>{r.toClient}</td>\r\n                            <td>{r.drug}</td>\r\n                            <td>{r.date}</td>\r\n                        </tr>\r\n                    ))}\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipes;","D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\PrescriptionsForm.js",["142"],"import {useTranslation} from \"react-i18next\";\r\nimport PrescriptionTable from \"./PrescriptionsTable\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport '../../CSS/Prescription/PrescriptionsForm.css'\r\nimport {PrescriptionFilterContext} from './Prescription';\r\nimport axios from \"axios\";\r\n\r\nexport const PrescriptionForm = () => {\r\n    const {t} = useTranslation();\r\n    const [filterOptions, setFilterOptions] = useContext(PrescriptionFilterContext)\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [clients, setClients] = useState([]);\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [searchTemplateFields, setSearchTemplateFields] = useState({\r\n        doctorTemplate: '',\r\n        clientTemplate: '',\r\n        drugTemplate: ''\r\n    })\r\n\r\n    const sendFilterOptionsSelected = event => {\r\n        event.preventDefault();\r\n        console.log(filterOptions);\r\n    }\r\n    useEffect(() => {\r\n        axios.get('https://localhost:5001/api/doctors').then(response => {\r\n            const doctors = response.data.map(doctor => {\r\n                return doctor.firstName + ' ' + doctor.lastName;\r\n            });\r\n            setDoctors(doctors);\r\n        });\r\n        axios.get('https://localhost:5001/api/clients').then(response => {\r\n\r\n            const clients = response.data.map(client => {\r\n                return client.firstName + ' ' + client.lastName;\r\n            });\r\n            setClients(clients);\r\n        });\r\n        axios.get('https://localhost:5001/api/drugs').then(response => {\r\n            setDrugs(response.data);\r\n        }).catch(error => console.log(error));\r\n\r\n\r\n    }, []);\r\n    const changeHandleTemplates = e => {\r\n        setSearchTemplateFields({\r\n            ...searchTemplateFields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const resetFields = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form id='prescriptionsForm' onSubmit={sendFilterOptionsSelected}>\r\n                <label>{t(\"selectDoctor\")}:</label>\r\n                <input name='doctorTemplate' type=\"text\" placeholder={t('searchTemplate')}\r\n                       onChange={changeHandleTemplates}/>\r\n                <select onChange={(event) => setFilterOptions(filterOptions => ({\r\n                    ...filterOptions,\r\n                    selectDoctor: event.target.value\r\n                }))}>\r\n                    <option value='all'>{t('all')}</option>\r\n                    {doctors\r\n                        .filter(doctor => {\r\n                            if (searchTemplateFields.doctorTemplate.empty) return true;\r\n                            return doctor.toLowerCase().includes(searchTemplateFields.doctorTemplate.toLowerCase());\r\n                        })\r\n                        .map(doctor => {\r\n                            return (\r\n                                <option\r\n                                    value={doctor}>{doctor}</option>\r\n                            )\r\n                        })}\r\n                </select>\r\n                <label>{t(\"selectClient\")}:</label>\r\n                <input name='clientTemplate' type=\"text\" placeholder={t('searchTemplate')}\r\n                       onChange={changeHandleTemplates}/>\r\n                <select onChange={(event) => setFilterOptions(filterOptions => ({\r\n                    ...filterOptions,\r\n                    selectClient: event.target.value\r\n                }))}>\r\n                    <option value='all'>{t('all')}</option>\r\n                    {clients.filter(client => {\r\n                        if (searchTemplateFields.clientTemplate === '') return true;\r\n                        return client.toLowerCase().includes(searchTemplateFields.clientTemplate.toString().toLowerCase());\r\n                    }).map(client => {\r\n                        return (\r\n                            <option value={client}>{client}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                <label>{t(\"selectDrug\")}:</label>\r\n                <input name='drugTemplate' type=\"text\" placeholder={t('searchTemplate')}\r\n                       onChange={changeHandleTemplates}/>\r\n                <select onChange={(event) => setFilterOptions(filterOptions => ({\r\n                    ...filterOptions,\r\n                    selectDrug: event.target.value\r\n                }))}>\r\n                    <option value='all'>{t('all')}</option>\r\n                    {drugs.filter(drug => {\r\n                        if (searchTemplateFields.drugTemplate.empty) return true;\r\n                        return drug.name.toLowerCase().includes(searchTemplateFields.drugTemplate);\r\n                    })\r\n                        .map(drug => {\r\n                            const name = drug.name;\r\n                            return (\r\n                                <option value={name}>{name}</option>\r\n                            )\r\n                        })}\r\n                </select>\r\n                <label>{t('dateFrom')}</label>\r\n                <input name='dateFrom' type=\"date\"/>\r\n                <div/>\r\n                <label>{t('dateTo')}</label>\r\n                <input name='dateTo' type=\"date\"/>\r\n                <div/>\r\n                <Button className=\"filter\" type=\"submit\" onClick={resetFields}>{t(\"reset\")}</Button>;\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default PrescriptionForm;","D:\\Projects\\project_for_tin\\src\\index.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\DrugsTable.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\Drugs.js",["143"],"import {useTranslation} from \"react-i18next\";\r\nimport React, {useState} from \"react\";\r\nimport {DrugsTable} from \"./DrugsTable\";\r\nimport {DrugAddingForm} from \"./DrugAddingForm\";\r\n\r\nconst Drugs = () => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <div>\r\n            <h1>{t('drugs')}</h1>\r\n            <DrugAddingForm/>\r\n            <DrugsTable/>\r\n        </div>\r\n    )\r\n}\r\nexport {Drugs};","D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\DrugsDetails.js",["144"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport '../../CSS/Drugs/DrugsDetails.css'\r\n\r\nconst DrugsDetails = () => {\r\n    const {id} = useParams();\r\n    const {t} = useTranslation();\r\n    const [editingDisabled, setEditingDisable] = useState(true);\r\n    const [drugName, setDrugName] = useState('');\r\n    const [drugProducer, setDrugProducer] = useState('');\r\n    const [drugDescription, setDrugDescription] = useState('');\r\n    useEffect(() => {\r\n            axios.get('https://localhost:5001/api/drugs/' + id)\r\n                .then(response => {\r\n                    setDrugName(response.data.name);\r\n                    setDrugProducer(response.data.producer);\r\n                    setDrugDescription(response.data.description);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }, []\r\n    )\r\n    const updateDrugInformation = () => {\r\n        let headers = {\r\n            \"Id\": id,\r\n            \"Name\": drugName,\r\n            \"Producer\": drugProducer,\r\n            \"Description\": drugDescription\r\n        }\r\n        axios.put('https://localhost:5001/api/drugs', headers).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n        setEditingDisable(true);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>{t('detailsOf') + ': ' + drugName}</h1>\r\n            {editingDisabled ?\r\n                <h2 className='viewingMode'>{t('Viewing mode')}</h2>\r\n                :\r\n                <h2 className='editingMode'>{t('Editing mode')}</h2>\r\n            }\r\n            <div className='drugsDetails'>\r\n                <h2>Name</h2>\r\n                <input name='drugName' disabled={editingDisabled} type='text' value={drugName}\r\n                       onChange={event => setDrugName(event.target.value)}/>\r\n                <h2>Producer</h2>\r\n                <input name='producerTextField' disabled={editingDisabled} type='text' value={drugProducer}\r\n                       onChange={event => setDrugProducer(event.target.value)}/>\r\n                <h2>Description</h2>\r\n                <textarea disabled={editingDisabled} value={drugDescription}\r\n                          onChange={event => setDrugDescription(event.target.value)}/>\r\n            </div>\r\n            <Link className='details' to='/drugs'>{t('back')}</Link>\r\n            {editingDisabled ?\r\n                <button className='edit' onClick={() => {\r\n                    setEditingDisable(false)\r\n                }}>{t('edit')}</button>\r\n                :\r\n                <button className='saveButton' onClick={updateDrugInformation}>{t('save')}</button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport {DrugsDetails};","D:\\Projects\\project_for_tin\\src\\Classes\\Prescriptions\\PrescriptionAddingForm.js",["145","146"],"import {useTranslation} from \"react-i18next\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst PrescriptionAddingForm = () => {\r\n    const {t} = useTranslation();\r\n    const [formElements, setFormElements] = useState({selectDoctor: '', selectClient: '',  selectDrug: '', selectDate: ''})\r\n    const [clients, setClients] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [drugs, setDrugs] = useState([]);\r\n    const [searchTemplateFields, setSearchTemplateFields] = useState({\r\n        doctorTemplate: '',\r\n        clientTemplate: '',\r\n        drugTemplate: ''\r\n    })\r\n\r\n    const addPrescription = event => {\r\n        event.preventDefault();\r\n        let headers = {\r\n            \"DoctorId\": formElements.selectDoctor,\r\n            \"ClientId\": formElements.selectClient,\r\n            \"DrugId\": formElements.selectDrug,\r\n            \"Date\": formElements.selectDate\r\n        }\r\n        axios.post('https://localhost:5001/api/prescriptions/add', headers).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        axios.get('https://localhost:5001/api/doctors').then(response => {\r\n            setDoctors(response.data);\r\n        });\r\n        axios.get('https://localhost:5001/api/clients').then(response => {\r\n            setClients(response.data);\r\n        });\r\n        axios.get('https://localhost:5001/api/drugs').then(response => {\r\n            setDrugs(response.data);\r\n        }).catch(error => console.log(error));\r\n\r\n\r\n    }, []);\r\n    const changeHandleTemplates = e => {\r\n        setSearchTemplateFields({\r\n            ...searchTemplateFields,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const resetFields = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form id='prescriptionsForm' onSubmit={addPrescription}>\r\n                <label>{t(\"selectDoctor\")}:</label>\r\n                <input name='doctorTemplate' type=\"text\" placeholder={t('searchTemplate')}\r\n                       onChange={changeHandleTemplates}/>\r\n                <select required onChange={(event) => setFormElements(formElements=> ({\r\n                    ...formElements,\r\n                    selectDoctor: event.target.value\r\n                }))}>\r\n                    <option hidden disabled selected value> -- select an option -- </option>\r\n                    {doctors\r\n                        .filter(doctor => {\r\n                            if (searchTemplateFields.doctorTemplate.empty) return true;\r\n                            return (doctor.firstName +' '+ doctor.lastName).toLowerCase().includes(searchTemplateFields.doctorTemplate.toLowerCase());\r\n                        })\r\n                        .map(doctor => {\r\n                            return (\r\n                                <option\r\n                                    value={doctor.id}>{doctor.firstName +' '+ doctor.lastName}</option>\r\n                            )\r\n                        })}\r\n                </select>\r\n                <label>{t(\"selectClient\")}:</label>\r\n                <input name='clientTemplate' type=\"text\" placeholder={t('searchTemplate')}\r\n                       onChange={changeHandleTemplates}/>\r\n                <select required onChange={(event) => setFormElements(formElements=> ({\r\n                    ...formElements,\r\n                    selectClient: event.target.value\r\n                }))}>\r\n                    <option hidden disabled selected value> -- select an option -- </option>\r\n                    {clients.filter(client => {\r\n                        if (searchTemplateFields.clientTemplate === '') return true;\r\n                        return (client.firstName + ' ' +client.lastName).toLowerCase().includes(searchTemplateFields.clientTemplate.toString().toLowerCase());\r\n                    }).map(client => {\r\n                        return (\r\n                            <option value={client.id}>{client.firstName + ' ' +client.lastName}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                <label>{t(\"selectDrug\")}:</label>\r\n                <input name='drugTemplate' type=\"text\" placeholder={t('searchTemplate')}\r\n                       onChange={changeHandleTemplates}/>\r\n                <select required onChange={(event) => setFormElements(formElements=> ({\r\n                    ...formElements,\r\n                    selectDrug: event.target.value\r\n                }))}>\r\n                    <option hidden disabled selected value={\"none\"}> -- select an option -- </option>\r\n                    {drugs.filter(drug => {\r\n                        if (searchTemplateFields.drugTemplate.empty) return true;\r\n                        return drug.name.toLowerCase().includes(searchTemplateFields.drugTemplate.toLowerCase());\r\n                    })\r\n                        .map((drug,index) => {\r\n                            const name = drug.name;\r\n                            return (\r\n                                <option  value={drug.id}>{name}</option>\r\n                            )\r\n                        })}\r\n                </select>\r\n                <label>{t('date')}</label>\r\n                <input required name='date' type=\"date\" onChange={(event) => setFormElements(formElements=> ({\r\n                    ...formElements,\r\n                    selectDate: event.target.value\r\n                }))}/>\r\n                <div/>\r\n                <div/>\r\n                <Button className=\"submit\" type=\"submit\">{t(\"add\")}</Button>;\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport {PrescriptionAddingForm};","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\Employees.js",["147"],"import React from \"react\";\r\nimport {EmployeeForm} from \"./EmployeeForm\";\r\nimport {EmployeeTable} from \"./EmployeeTable\";\r\nimport {useTranslation} from \"react-i18next\";\r\nexport const Employees = () =>{\r\n    const {t} = useTranslation();\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    {t('doctorsTab')}\r\n                </h1>\r\n                <EmployeeTable/>\r\n            </div>\r\n        );\r\n}\r\n","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\EmployeeForm.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\EmployeeTable.js",["148","149","150"],"import React from \"react\";\r\nimport \"../../CSS/EmployeeTable.css\"\r\nimport {Button} from \"react-bootstrap\";\r\nimport {EmployeeForm} from \"./EmployeeForm\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport class EmployeeTable extends React.Component {\r\n\r\n    state = {\r\n        showEmployeeAdd: false,\r\n        buttonName: '',\r\n        rows: []\r\n    }\r\n    openEmployeeAdder = () => {\r\n        this.setState({showEmployeeAdd: !this.state.showEmployeeAdd})\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadEmployees();\r\n    }\r\n\r\n    loadEmployees = () => {\r\n        axios.get('https://localhost:5001/api/doctors')\r\n            .then(response => {\r\n                this.setState({rows: response.data});\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleAddRow = (employee) => {\r\n        let headers = {\r\n            \"FirstName\": employee.firstName,\r\n            \"LastName\": employee.lastName,\r\n            \"Email\": employee.email\r\n        }\r\n        axios.post('https://localhost:5001/api/doctors/add', headers).then(response => {\r\n            this.loadEmployees();\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    deleteDoctor = (id) => {\r\n\r\n        axios\r\n            .delete(`https://localhost:5001/api/doctors/` + id)\r\n            .then(response => {\r\n                    this.loadEmployees();\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showEmployeeAdd) {\r\n            this.state.buttonName = 'Hide \\'Add New Doctor\\' form'\r\n        } else {\r\n            this.state.buttonName = 'Add New Doctor'\r\n        }\r\n        return (\r\n            <div>\r\n                <Button onClick={this.openEmployeeAdder}>{this.state.buttonName}</Button>\r\n                <EmployeeForm isActive={this.state.showEmployeeAdd} addRow={this.handleAddRow}/>\r\n                <table>\r\n                    <tr>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Email</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                    {this.state.rows.map((r) => (\r\n                        <tr>\r\n                            <td>{r.firstName}</td>\r\n                            <td>{r.lastName}</td>\r\n                            <td>{r.email}</td>\r\n                            <td>\r\n                                <div className={\"employeeButtons\"}>\r\n                                    <Link className=\"details\" to={'doctors/details/' + r.id}>Details</Link>\r\n                                    <Button className=\"delete\"\r\n                                            onClick={() => this.deleteDoctor(r.id)}>Delete</Button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}","D:\\Projects\\project_for_tin\\src\\Classes\\Doctors\\DoctorDetails.js",["151"],"import {Link, useParams} from \"react-router-dom\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport '../../CSS/Drugs/DrugsDetails.css'\r\n\r\n\r\nconst DoctorDetails = () =>{\r\n    const {id} = useParams();\r\n    const {t} = useTranslation();\r\n    const [editingDisabled, setEditingDisable] = useState(true);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    useEffect(() => {\r\n            axios.get('https://localhost:5001/api/doctors/' + id)\r\n                .then(response => {\r\n                    setFirstName(response.data.firstName);\r\n                    setLastName(response.data.lastName);\r\n                    setEmail(response.data.email);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }, []\r\n    )\r\n    const updateDrugInformation = () => {\r\n        let headers = {\r\n            \"Id\": id,\r\n            \"FirstName\": firstName,\r\n            \"LastName\": lastName,\r\n            \"Email\": email\r\n        }\r\n        axios.put('https://localhost:5001/api/doctors', headers).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n        setEditingDisable(true);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>{t('detailsOf') + ': ' + firstName}</h1>\r\n            {editingDisabled ?\r\n                <h2 className='viewingMode'>{t('Viewing mode')}</h2>\r\n                :\r\n                <h2 className='editingMode'>{t('Editing mode')}</h2>\r\n            }\r\n            <div className='drugsDetails'>\r\n                <h2>First Name</h2>\r\n                <input name='drugName' disabled={editingDisabled} type='text' value={firstName}\r\n                       onChange={event => setFirstName(event.target.value)}/>\r\n                <h2>Last Name</h2>\r\n                <input name='producerTextField' disabled={editingDisabled} type='text' value={lastName}\r\n                       onChange={event => setLastName(event.target.value)}/>\r\n                <h2>Email</h2>\r\n                <input type='text' disabled={editingDisabled} value={email}\r\n                          onChange={event => setEmail(event.target.value)}/>\r\n            </div>\r\n            <Link className='details' to='/doctors'>{t('back')}</Link>\r\n            {editingDisabled ?\r\n                <button className='edit' onClick={() => {\r\n                    setEditingDisable(false)\r\n                }}>{t('edit')}</button>\r\n                :\r\n                <button className='saveButton' onClick={updateDrugInformation}>{t('save')}</button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport {DoctorDetails}","D:\\Projects\\project_for_tin\\src\\Classes\\Drugs\\DrugAddingForm.js",["152"],"import React, {useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {TextField} from \"../DataValidation/Field\";\r\nimport axios from \"axios\";\r\n\r\nconst DrugAddingForm = () => {\r\n    const {t} = useTranslation();\r\n    const [showAddingForm, setShowAddingForm]= useState(false);\r\n    const [name, setName] = useState('');\r\n    const [producer, setProducer] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [nameError, setNameError] = useState('');\r\n    const [producerError, setProducerError] = useState('');\r\n    const [descriptionError,setDescriptionError] = useState('');\r\n\r\n   const changeNameValue = event =>{\r\n       let value = event.target.value;\r\n       const nameField = new TextField(value);\r\n       setNameError('');\r\n       try{\r\n           nameField.checkRequirements();\r\n       }catch (e) {\r\n           setNameError(e);\r\n       }\r\n       setName(value);\r\n    }\r\n   const changeDescriptionValue = event =>{\r\n       let value = event.target.value;\r\n       const descriptionField = new TextField(value);\r\n       setDescriptionError('');\r\n       try{\r\n           descriptionField.checkRequirements();\r\n       }catch (e) {\r\n           setDescriptionError(e);\r\n       }\r\n       setDescription(value);\r\n    }\r\n   const changeProducerValue = event =>{\r\n       let value = event.target.value;\r\n       const producerField = new TextField(value);\r\n       setProducerError('');\r\n       try{\r\n           producerField.checkRequirements();\r\n       }catch (e) {\r\n           setProducerError(e);\r\n       }\r\n       setProducer(value);\r\n    }\r\n    const addNewDrug = event =>{\r\n        event.preventDefault();\r\n        const nameField = new TextField(name);\r\n        const producerField = new TextField(producer);\r\n        const descriptionField = new TextField(description);\r\n        try{\r\n            nameField.checkRequirements();\r\n            producerField.checkRequirements();\r\n            descriptionField.checkRequirements();\r\n        }catch (e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n        let headers = {\r\n            \"Name\": name,\r\n            \"Producer\": producer,\r\n            \"Description\": description\r\n        }\r\n        axios.post('https://localhost:5001/api/drugs/add', headers).then(response => {\r\n            console.log(response);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n        return true;\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={() => setShowAddingForm(!showAddingForm)}>\r\n                {showAddingForm ?\r\n                    t('hideAddDrugForm')\r\n                    :\r\n                    t('showAddDrugForm')\r\n                }\r\n            </button>\r\n            {showAddingForm &&\r\n            <div>\r\n                <form onSubmit={addNewDrug}>\r\n                    <label>{t('Name')}</label>\r\n                    <input type='text' value={name} onChange={changeNameValue}/>\r\n                    <span className='error-text'>{nameError}</span>\r\n                    <label>{t('Producer')}</label>\r\n                    <input type='text' value={producer} onChange={changeProducerValue}/>\r\n                    <span className='error-text'>{producerError}</span>\r\n                    <label>{t('Description')}</label>\r\n                    <textarea value={description} onChange={changeDescriptionValue}/>\r\n                    <span className='error-text'>{descriptionError}</span>\r\n                    <button className='submit' type='submit'>{t('addDrug')}</button>\r\n                </form>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport {DrugAddingForm}","D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\Clients.js",["153"],"D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\ClientAddingForm.js",["154"],"D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\ClientsTable.js",[],"D:\\Projects\\project_for_tin\\src\\Classes\\Clients\\ClientDetails.js",["155"],{"ruleId":"156","severity":1,"message":"157","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":14},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":3,"column":31,"nodeType":"158","messageId":"159","endLine":3,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":12,"column":13,"nodeType":"167","messageId":"168","endLine":12,"endColumn":38},{"ruleId":"156","severity":1,"message":"169","line":44,"column":7,"nodeType":"158","messageId":"159","endLine":44,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":58,"column":13,"nodeType":"167","messageId":"168","endLine":58,"endColumn":44},{"ruleId":"165","severity":1,"message":"166","line":60,"column":13,"nodeType":"167","messageId":"168","endLine":60,"endColumn":88},{"ruleId":"165","severity":1,"message":"166","line":84,"column":13,"nodeType":"167","messageId":"168","endLine":84,"endColumn":95},{"ruleId":"165","severity":1,"message":"166","line":93,"column":13,"nodeType":"167","messageId":"168","endLine":93,"endColumn":62},{"ruleId":"170","severity":1,"message":"171","line":99,"column":30,"nodeType":"172","messageId":"173","endLine":99,"endColumn":31,"suggestions":"174"},{"ruleId":"170","severity":1,"message":"171","line":99,"column":55,"nodeType":"172","messageId":"173","endLine":99,"endColumn":56,"suggestions":"175"},{"ruleId":"156","severity":1,"message":"176","line":104,"column":7,"nodeType":"158","messageId":"159","endLine":104,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":116,"column":13,"nodeType":"167","messageId":"168","endLine":116,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":118,"column":13,"nodeType":"167","messageId":"168","endLine":118,"endColumn":48},{"ruleId":"156","severity":1,"message":"177","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":36,"column":5,"nodeType":"180","messageId":"181","endLine":38,"endColumn":6},{"ruleId":"156","severity":1,"message":"182","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"183","line":2,"column":9,"nodeType":"158","messageId":"159","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"184","line":2,"column":19,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"156","severity":1,"message":"185","line":10,"column":12,"nodeType":"158","messageId":"159","endLine":10,"endColumn":20},{"ruleId":"156","severity":1,"message":"186","line":9,"column":27,"nodeType":"158","messageId":"159","endLine":9,"endColumn":43},{"ruleId":"156","severity":1,"message":"187","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"156","severity":1,"message":"188","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":24,"column":12,"nodeType":"191","endLine":24,"endColumn":14,"suggestions":"192"},{"ruleId":"156","severity":1,"message":"193","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"194","line":51,"column":11,"nodeType":"158","messageId":"159","endLine":51,"endColumn":22},{"ruleId":"156","severity":1,"message":"195","line":2,"column":9,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":19,"column":5,"nodeType":"180","messageId":"181","endLine":21,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":62,"column":13,"nodeType":"198","endLine":62,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":64,"column":13,"nodeType":"198","endLine":64,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":25,"column":12,"nodeType":"191","endLine":25,"endColumn":14,"suggestions":"199"},{"ruleId":"156","severity":1,"message":"184","line":3,"column":9,"nodeType":"158","messageId":"159","endLine":3,"endColumn":15},{"ruleId":"156","severity":1,"message":"188","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"156","severity":1,"message":"184","line":3,"column":9,"nodeType":"158","messageId":"159","endLine":3,"endColumn":15},{"ruleId":"189","severity":1,"message":"200","line":26,"column":12,"nodeType":"191","endLine":26,"endColumn":14,"suggestions":"201"},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","no-native-reassign",["202"],"no-negated-in-lhs",["203"],"'Redirect' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'SalaryField' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["204","205"],["206","207"],"'DateField' is defined but never used.","'Settings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'language' is assigned a value but never used.","'setFilterOptions' is assigned a value but never used.","'PrescriptionTable' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["208"],"'useContext' is defined but never used.","'resetFields' is assigned a value but never used.","'EmployeeForm' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["209"],"React Hook useEffect has missing dependencies: 'dateOfBirth' and 'id'. Either include them or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"messageId":"211","fix":"212","desc":"213"},{"messageId":"214","fix":"215","desc":"216"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"214","fix":"218","desc":"216"},{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"222","fix":"223"},"removeEscape",{"range":"224","text":"225"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"226","text":"227"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"228","text":"225"},{"range":"229","text":"227"},"Update the dependencies array to be: [id]",{"range":"230","text":"231"},{"range":"232","text":"231"},"Update the dependencies array to be: [dateOfBirth, id]",{"range":"233","text":"234"},[2488,2489],"",[2488,2488],"\\",[2513,2514],[2513,2513],[995,997],"[id]",[959,961],[1079,1081],"[dateOfBirth, id]"]